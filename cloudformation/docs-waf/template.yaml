AWSTemplateFormatVersion: '2010-09-09'

Description: |
  devplatform-deploy example-waf-bootstrap template version: v0.0.1
  CloudFormation template defines Web ACL resources.
  Managed by dev-platform

Parameters:
  Environment:
    Description: "The environment we're deploying into."
    Type: "String"
    AllowedValues:
      - "build"

# If a rule exists in ExcludedRules, then it's action is set to Count, instead of the default action for that group.
# To upgrade a rule to follow the group action, please comment it out, so that it becomes active.
# @TODO We need to find a better way to set this up.

Resources:
  webAcl:
    Type: 'AWS::WAFv2::WebACL'
    Properties:
      Description: Web ACL for API Gateway
      Name: !Sub '${AWS::StackName}-${Environment}-acl'
      DefaultAction:
        Allow: {}

      Rules:
        - Name: GDSIPs
          Action:
            Allow: { }
          Priority: 0
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt WAFv2GDSIPSet.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: TRUE
            MetricName: !Sub "${AWS::StackName}-WAFGDSIP-hits"
            SampledRequestsEnabled: FALSE
        - Name: AWS-CRS
          Priority: 10
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              #ExcludedRules:
              #- Name: CrossSiteScripting_BODY
              #- Name: CrossSiteScripting_COOKIE
              #- Name: CrossSiteScripting_QUERYARGUMENTS
              #- Name: CrossSiteScripting_URIPATH
              #- Name: EC2MetaDataSSRF_BODY
              #- Name: EC2MetaDataSSRF_COOKIE
              #- Name: EC2MetaDataSSRF_QUERYARGUMENTS
              #- Name: EC2MetaDataSSRF_URIPATH
              #- Name: GenericLFI_BODY
              #- Name: GenericLFI_QUERYARGUMENTS
              #- Name: GenericLFI_URIPATH
              #- Name: GenericRFI_BODY
              #- Name: GenericRFI_QUERYARGUMENTS
              #- Name: GenericRFI_URIPATH
              #- Name: NoUserAgent_HEADER
              #- Name: RestrictedExtensions_QUERYARGUMENTS
              #- Name: RestrictedExtensions_URIPATH
              #- Name: SizeRestrictions_BODY
              #- Name: SizeRestrictions_Cookie_HEADER
              #- Name: SizeRestrictions_QUERYSTRING
              #- Name: SizeRestrictions_URIPATH
              #- Name: UserAgent_BadBots_HEADER
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-aws-crs-metric'

        - Name: Bad-Inputs
          Priority: 1
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
              #ExcludedRules:
              #- Name: ExploitablePaths_URIPATH
              #- Name: Host_localhost_HEADER
              #- Name: JavaDeserializationRCE_BODY
              #- Name: JavaDeserializationRCE_HEADER
              #- Name: JavaDeserializationRCE_QUERYSTRING
              #- Name: JavaDeserializationRCE_URIPATH
              #- Name: Log4JRCE
              #- Name: PROPFIND_METHOD
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-bad-inputs-metric'

        - Name: Anonymous-IpList
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
              #ExcludedRules:
              #- Name: AnonymousIPList
              #- Name: HostingProviderIPList
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-anonymous-iplist-metric'
        - Name: Linux-RuleSet
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesLinuxRuleSet # WCU = 200
              #ExcludedRules:
              #  - Name: LFI_URIPATH
              #  - Name: LFI_QUERYSTRING
              #  - Name: LFI_HEADER
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-Linux-ruleset-metric'

        - Name: Unix-RuleSet
          Priority: 4
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesUnixRuleSet # WCU = 100
              #ExcludedRules:
              #  - Name: UNIXShellCommandsVariables_QUERYARGUMENTS
              #  - Name: UNIXShellCommandsVariables_BODY
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-Unix-ruleset-metric'

        - Name: SQLInject-RuleSet
          Priority: 5
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
              #ExcludedRules:
              #- Name: SQLiExtendedPatterns_QUERYARGUMENTS
              #- Name: SQLi_BODY
              #- Name: SQLi_COOKIE
              #- Name: SQLi_QUERYARGUMENTS
              #- Name: SQLi_URIPATH
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-SQLinjection-ruleset-metric'

        - Name: RateBased-CountIpRule
          Priority: 6
          Statement:
            RateBasedStatement:
              Limit: 100
              AggregateKeyType: IP
          Action:
            Count: { }
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "${AWS::StackName}-${Environment}-RateBased-CountIp-ruleset-metric"
            SampledRequestsEnabled: true

      Scope: REGIONAL
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-${Environment}'
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${AWS::StackName}-${Environment}-metric'

  cloudwatchLogsGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub 'aws-waf-logs-${AWS::StackName}-${Environment}-cloudWatchLog'
      RetentionInDays: 180
      KmsKeyId:  !Ref WAFLoggingKmsKey

  # The IP address blocks below are referenced from here:
  # https://sites.google.com/a/digital.cabinet-office.gov.uk/gds/working-at-gds/gds-internal-it/gds-internal-it-network-public-ip-addresses
  WAFv2GDSIPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        - "217.196.229.77/32"
        - "217.196.229.79/32"
        - "217.196.229.80/32" #(BYOD VPN Only)
        - "217.196.229.81/32"
        - "51.149.8.0/25"
        - "51.149.8.128/29"
      IPAddressVersion: IPV4
      Scope: REGIONAL
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WAFv2GDSIPSet"
        - Key: Service
          Value: "identity-broker"
        - Key: Source
          Value: "govuk-one-login/devplatform-demo-sam-app/WAFv2/template.yaml"

  webAcllogging:
    Type: 'AWS::WAFv2::LoggingConfiguration'
    Properties:
      ResourceArn: !GetAtt
        - webAcl
        - Arn
      LogDestinationConfigs:
        - !GetAtt cloudwatchLogsGroup.Arn
      LoggingFilter:
        DefaultBehavior: KEEP
        Filters:
          - Behavior: KEEP
            Conditions:
              - ActionCondition:
                  Action: BLOCK
              - ActionCondition:
                  Action: COUNT
            Requirement: MEETS_ANY
      RedactedFields:
        - SingleHeader:
            Name: password
  WafAclSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of webACL
      Name: !Sub "/${Environment}/Platform/Security/WafArn"
      Type: String
      Value: !GetAtt
      - webAcl
      - Arn

  WAFLoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

Outputs:
  OWASPWebAclARN:
    Description: ARN of WebACL
    Value: !GetAtt
      - webAcl
      - Arn
    Export:
      Name: !Sub "${AWS::StackName}-Waf-WebAcl-arn"
  CloudwatchLogsGroupARN:
    Description: ARN of CloudWatch Logs Group
    Value: !GetAtt
      - cloudwatchLogsGroup
      - Arn